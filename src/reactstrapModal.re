[@bs.module "reactstrap"] external modal : ReasonReact.reactClass = "Modal";

let make = (
  ~isOpen: option(bool)=?,
  ~autoFocus: option(bool)=?,
  ~centered: option(bool)=?,
  ~size: option(string)=?,
  ~toggle=?,
  ~role: option(string)=?,
  ~labelledBy: option(string)=?,
  ~keyboard: option(bool)=?,
  ~backdrop=?,
  ~onEnter=?,
  ~onExit=?,
  ~onOpened=?,
  ~onClosed=?,
  ~className: option(string)=?,
  ~wrapClassName: option(string)=?,
  ~modalClassName: option(string)=?,
  ~backdropClassName: option(string)=?,
  ~contentClassName: option(string)=?,
  ~fade: option(bool)=?,
  ~cssModule=?,
  ~zIndex=?,
  ~backdropTransition=?,
  ~modalTransition=?,
  children
) =>
  ReasonReact.wrapJsForReason(
    ~reactClass=modal,
    ~props={
      "isOpen": Js.Nullable.fromOption(isOpen),
      "autoFocus": Js.Nullable.fromOption(autoFocus),
      "centered": Js.Nullable.fromOption(centered),
      "size": Js.Nullable.fromOption(size),
      "toggle": Js.Nullable.fromOption(toggle),
      "role": Js.Nullable.fromOption(role),
      "labelledBy": Js.Nullable.fromOption(labelledBy),
      "keyboard": Js.Nullable.fromOption(keyboard),
      "backdrop": Js.Nullable.fromOption(backdrop),
      "onEnter": Js.Nullable.fromOption(onEnter),
      "onExit": Js.Nullable.fromOption(onExit),
      "onOpened": Js.Nullable.fromOption(onOpened),
      "onClosed": Js.Nullable.fromOption(onClosed),
      "className": Js.Nullable.fromOption(className),
      "wrapClassName": Js.Nullable.fromOption(wrapClassName),
      "modalClassName": Js.Nullable.fromOption(modalClassName),
      "backdropClassName": Js.Nullable.fromOption(backdropClassName),
      "contentClassName": Js.Nullable.fromOption(contentClassName),
      "fade": Js.Nullable.fromOption(fade),
      "cssModule": Js.Nullable.fromOption(cssModule),
      "zIndex": Js.Nullable.fromOption(zIndex),
      "backdropTransition": Js.Nullable.fromOption(backdropTransition),
      "modalTransition": Js.Nullable.fromOption(modalTransition)
    },
    children
  );
